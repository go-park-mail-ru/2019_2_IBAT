// Automatically generated by MockGen. DO NOT EDIT!
// Source: repository.go

package mock_recommends

import (
	. "2019_2_IBAT/pkg/pkg/models"
	gomock "github.com/golang/mock/gomock"
)

// Mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *_MockRepositoryRecorder
}

// Recorder for MockRepository (not exported)
type _MockRepositoryRecorder struct {
	mock *MockRepository
}

func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &_MockRepositoryRecorder{mock}
	return mock
}

func (_m *MockRepository) EXPECT() *_MockRepositoryRecorder {
	return _m.recorder
}

func (_m *MockRepository) SetTagIDs(AuthRec AuthStorageValue, tagIDs []string) error {
	ret := _m.ctrl.Call(_m, "SetTagIDs", AuthRec, tagIDs)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRepositoryRecorder) SetTagIDs(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetTagIDs", arg0, arg1)
}

func (_m *MockRepository) GetTagIDs(AuthRec AuthStorageValue) ([]string, error) {
	ret := _m.ctrl.Call(_m, "GetTagIDs", AuthRec)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRepositoryRecorder) GetTagIDs(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetTagIDs", arg0)
}

func (_m *MockRepository) GetUsersForTags(_param0 []string) ([]string, error) {
	ret := _m.ctrl.Call(_m, "GetUsersForTags", _param0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockRepositoryRecorder) GetUsersForTags(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUsersForTags", arg0)
}
