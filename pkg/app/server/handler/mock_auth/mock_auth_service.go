// Automatically generated by MockGen. DO NOT EDIT!
// Source: service.go

package mock_auth

import (
	http "net/http"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"

	. "2019_2_IBAT/internal/pkg/interfaces"
)

// Mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *_MockServiceRecorder
}

// Recorder for MockService (not exported)
type _MockServiceRecorder struct {
	mock *MockService
}

func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &_MockServiceRecorder{mock}
	return mock
}

func (_m *MockService) EXPECT() *_MockServiceRecorder {
	return _m.recorder
}

func (_m *MockService) CreateSession(id uuid.UUID, class string) (AuthStorageValue, string, error) {
	ret := _m.ctrl.Call(_m, "CreateSession", id, class)
	ret0, _ := ret[0].(AuthStorageValue)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockServiceRecorder) CreateSession(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateSession", arg0, arg1)
}

func (_m *MockService) DeleteSession(cookie string) bool {
	ret := _m.ctrl.Call(_m, "DeleteSession", cookie)
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockServiceRecorder) DeleteSession(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteSession", arg0)
}

func (_m *MockService) GetSession(cookie string) (AuthStorageValue, bool) {
	ret := _m.ctrl.Call(_m, "GetSession", cookie)
	ret0, _ := ret[0].(AuthStorageValue)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

func (_mr *_MockServiceRecorder) GetSession(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetSession", arg0)
}

func (_m *MockService) AuthMiddleware(h http.Handler) http.Handler {
	ret := _m.ctrl.Call(_m, "AuthMiddleware", h)
	ret0, _ := ret[0].(http.Handler)
	return ret0
}

func (_mr *_MockServiceRecorder) AuthMiddleware(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AuthMiddleware", arg0)
}
