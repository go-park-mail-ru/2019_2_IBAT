// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package session

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateSessionInfo struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Role                 string   `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Expires              string   `protobuf:"bytes,3,opt,name=expires,proto3" json:"expires,omitempty"`
	Cookie               string   `protobuf:"bytes,4,opt,name=cookie,proto3" json:"cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSessionInfo) Reset()         { *m = CreateSessionInfo{} }
func (m *CreateSessionInfo) String() string { return proto.CompactTextString(m) }
func (*CreateSessionInfo) ProtoMessage()    {}
func (*CreateSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *CreateSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSessionInfo.Unmarshal(m, b)
}
func (m *CreateSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSessionInfo.Marshal(b, m, deterministic)
}
func (m *CreateSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSessionInfo.Merge(m, src)
}
func (m *CreateSessionInfo) XXX_Size() int {
	return xxx_messageInfo_CreateSessionInfo.Size(m)
}
func (m *CreateSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSessionInfo proto.InternalMessageInfo

func (m *CreateSessionInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *CreateSessionInfo) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *CreateSessionInfo) GetExpires() string {
	if m != nil {
		return m.Expires
	}
	return ""
}

func (m *CreateSessionInfo) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

type GetSessionInfo struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Role                 string   `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Expires              string   `protobuf:"bytes,3,opt,name=expires,proto3" json:"expires,omitempty"`
	Ok                   bool     `protobuf:"varint,4,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSessionInfo) Reset()         { *m = GetSessionInfo{} }
func (m *GetSessionInfo) String() string { return proto.CompactTextString(m) }
func (*GetSessionInfo) ProtoMessage()    {}
func (*GetSessionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *GetSessionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSessionInfo.Unmarshal(m, b)
}
func (m *GetSessionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSessionInfo.Marshal(b, m, deterministic)
}
func (m *GetSessionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSessionInfo.Merge(m, src)
}
func (m *GetSessionInfo) XXX_Size() int {
	return xxx_messageInfo_GetSessionInfo.Size(m)
}
func (m *GetSessionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSessionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GetSessionInfo proto.InternalMessageInfo

func (m *GetSessionInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *GetSessionInfo) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *GetSessionInfo) GetExpires() string {
	if m != nil {
		return m.Expires
	}
	return ""
}

func (m *GetSessionInfo) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Session struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Class                string   `protobuf:"bytes,2,opt,name=class,proto3" json:"class,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Session) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

type Cookie struct {
	Cookie               string   `protobuf:"bytes,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cookie) Reset()         { *m = Cookie{} }
func (m *Cookie) String() string { return proto.CompactTextString(m) }
func (*Cookie) ProtoMessage()    {}
func (*Cookie) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *Cookie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookie.Unmarshal(m, b)
}
func (m *Cookie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookie.Marshal(b, m, deterministic)
}
func (m *Cookie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookie.Merge(m, src)
}
func (m *Cookie) XXX_Size() int {
	return xxx_messageInfo_Cookie.Size(m)
}
func (m *Cookie) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookie.DiscardUnknown(m)
}

var xxx_messageInfo_Cookie proto.InternalMessageInfo

func (m *Cookie) GetCookie() string {
	if m != nil {
		return m.Cookie
	}
	return ""
}

type Bool struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bool) Reset()         { *m = Bool{} }
func (m *Bool) String() string { return proto.CompactTextString(m) }
func (*Bool) ProtoMessage()    {}
func (*Bool) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *Bool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bool.Unmarshal(m, b)
}
func (m *Bool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bool.Marshal(b, m, deterministic)
}
func (m *Bool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bool.Merge(m, src)
}
func (m *Bool) XXX_Size() int {
	return xxx_messageInfo_Bool.Size(m)
}
func (m *Bool) XXX_DiscardUnknown() {
	xxx_messageInfo_Bool.DiscardUnknown(m)
}

var xxx_messageInfo_Bool proto.InternalMessageInfo

func (m *Bool) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*CreateSessionInfo)(nil), "session.CreateSessionInfo")
	proto.RegisterType((*GetSessionInfo)(nil), "session.GetSessionInfo")
	proto.RegisterType((*Session)(nil), "session.Session")
	proto.RegisterType((*Cookie)(nil), "session.Cookie")
	proto.RegisterType((*Bool)(nil), "session.Bool")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x93, 0x35, 0x26, 0x3a, 0x90, 0xa8, 0x83, 0xd4, 0x25, 0xa7, 0xb2, 0x27, 0x4f, 0x11,
	0xf5, 0xe2, 0x4d, 0xb0, 0x01, 0xc9, 0xb5, 0xde, 0x85, 0x9a, 0x8e, 0xb0, 0x24, 0x74, 0xca, 0x6e,
	0x10, 0xff, 0x99, 0x7f, 0x4f, 0xb2, 0xdd, 0x24, 0x86, 0x5e, 0xbd, 0xed, 0x7c, 0x33, 0xbc, 0xf7,
	0x78, 0x0b, 0xa9, 0x25, 0xf3, 0xa5, 0x6b, 0x2a, 0xf6, 0x86, 0x3b, 0xc6, 0xc4, 0x92, 0xb5, 0x9a,
	0x77, 0x4a, 0xc3, 0xd5, 0xca, 0xd0, 0xa6, 0xa3, 0xb7, 0x03, 0xa8, 0x76, 0x9f, 0x8c, 0x19, 0x88,
	0xaa, 0x94, 0xe1, 0x32, 0xbc, 0x3d, 0x5f, 0x8b, 0xaa, 0x44, 0x84, 0xc8, 0x70, 0x4b, 0x52, 0x38,
	0xe2, 0xde, 0x28, 0x21, 0xa1, 0xef, 0xbd, 0x36, 0x64, 0xe5, 0x89, 0xc3, 0xc3, 0x88, 0x0b, 0x88,
	0x6b, 0xe6, 0x46, 0x93, 0x8c, 0xdc, 0xc2, 0x4f, 0xea, 0x1d, 0xb2, 0x57, 0xea, 0xfe, 0xcf, 0x27,
	0x03, 0xc1, 0x8d, 0xf3, 0x38, 0x5b, 0x0b, 0x6e, 0xd4, 0x1d, 0x24, 0x5e, 0xbc, 0x5f, 0xe9, 0xed,
	0x20, 0xac, 0xb7, 0x78, 0x0d, 0xa7, 0x75, 0xbb, 0xb1, 0xd6, 0x2b, 0x1f, 0x06, 0xb5, 0x84, 0x78,
	0xe5, 0xa2, 0xfd, 0x89, 0x1c, 0xce, 0x22, 0x2f, 0x20, 0x7a, 0x61, 0x6e, 0xbd, 0x55, 0x38, 0x58,
	0x3d, 0xfc, 0x84, 0xbd, 0x97, 0x2b, 0x14, 0x9f, 0x21, 0x9d, 0x35, 0x88, 0x97, 0x85, 0x2f, 0xb7,
	0xf0, 0x24, 0xcf, 0x47, 0x72, 0xd4, 0xb5, 0x0a, 0xf0, 0x1e, 0xd2, 0x92, 0x5a, 0x9a, 0x04, 0x2e,
	0xa6, 0x73, 0x17, 0x23, 0x4f, 0x47, 0xd0, 0xa7, 0x51, 0x01, 0x3e, 0x01, 0x4c, 0x55, 0x1e, 0xdf,
	0xdf, 0x8c, 0x60, 0x5e, 0xb8, 0x0a, 0x3e, 0x62, 0xf7, 0xff, 0x8f, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x35, 0x8a, 0x9b, 0x82, 0x10, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	CreateSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*CreateSessionInfo, error)
	DeleteSession(ctx context.Context, in *Cookie, opts ...grpc.CallOption) (*Bool, error)
	GetSession(ctx context.Context, in *Cookie, opts ...grpc.CallOption) (*GetSessionInfo, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) CreateSession(ctx context.Context, in *Session, opts ...grpc.CallOption) (*CreateSessionInfo, error) {
	out := new(CreateSessionInfo)
	err := c.cc.Invoke(ctx, "/session.Service/CreateSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) DeleteSession(ctx context.Context, in *Cookie, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/session.Service/DeleteSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetSession(ctx context.Context, in *Cookie, opts ...grpc.CallOption) (*GetSessionInfo, error) {
	out := new(GetSessionInfo)
	err := c.cc.Invoke(ctx, "/session.Service/GetSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	CreateSession(context.Context, *Session) (*CreateSessionInfo, error)
	DeleteSession(context.Context, *Cookie) (*Bool, error)
	GetSession(context.Context, *Cookie) (*GetSessionInfo, error)
}

// UnimplementedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceServer struct {
}

func (*UnimplementedServiceServer) CreateSession(ctx context.Context, req *Session) (*CreateSessionInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSession not implemented")
}
func (*UnimplementedServiceServer) DeleteSession(ctx context.Context, req *Cookie) (*Bool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSession not implemented")
}
func (*UnimplementedServiceServer) GetSession(ctx context.Context, req *Cookie) (*GetSessionInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSession not implemented")
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_CreateSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).CreateSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/session.Service/CreateSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).CreateSession(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_DeleteSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cookie)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).DeleteSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/session.Service/DeleteSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).DeleteSession(ctx, req.(*Cookie))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cookie)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/session.Service/GetSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetSession(ctx, req.(*Cookie))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "session.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSession",
			Handler:    _Service_CreateSession_Handler,
		},
		{
			MethodName: "DeleteSession",
			Handler:    _Service_DeleteSession_Handler,
		},
		{
			MethodName: "GetSession",
			Handler:    _Service_GetSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
